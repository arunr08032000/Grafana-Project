Grafana Docs
------------
https://grafana.com/docs/grafana/latest/setup-grafana/installation/debian/

#2-start-the-server

sudo apt-get install -y apt-transport-https software-properties-common wget

sudo mkdir -p /etc/apt/keyrings/
wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null

echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
or
echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com beta main" | sudo tee -a /etc/apt/sources.list.d/grafana.list

# Updates the list of available packages
sudo apt-get update

# Installs the latest OSS release:
sudo apt-get install grafana

# Installs the latest Enterprise release:
sudo apt-get install grafana-enterprise

#start the grafana-server
systemctl start grafana-server
systemctl enable grafana-server

curl http://localhost:3000/

Next prometheus installation Prometheus_install.txt

after prometheus installation

Create Data sources
-------------------
Home  >  Connections  >  Data sources  >  Add data source

Next Node exporter angent installation Node exporter_install.txt

after node exporter installation

Create dashboad in grafana using dashboard ID
---------------------------------------------
Node_exporter: Home  >  Dashboards  >  New  >   Import  >  dashboard URL or ID  >  1860 or 11074  >  load  >  Select prometheus
Windows_exporter: Home  >  Dashboards  >  New  >   Import  >  dashboard URL or ID  >  10467 or 14451 or 20763  >  load  >  Select prometheus

Alert Settings
==============
sudo vim /usr/share/grafana/conf/defaults.ini

#################################### SMTP / Emailing #####################
[smtp]
enabled = true
host = smtp.zoho.in:587
user = arunr@integramicro.co.in
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
password = JEWscaXjG7Nr
cert_file =
key_file =
skip_verify = false
from_address = arunr@integramicro.co.in
from_name = Grafana
ehlo_identity =
startTLS_policy =
enable_tracing = false

[smtp.static_headers]
# Include custom static headers in all outgoing emails

[emails]
welcome_email_on_sign_up = false
templates_pattern = emails/*.html, emails/*.txt
content_types = text/html

#################################### Logging ##########################

Home  >  Alerting  >  Contact points  >  Add Contact points

systemctl restart grafana-server

#Firewall settings
sudo ufw allow 3000/tcp
sudo ufw reload

#UFW
sudo ufw allow from <IP_ADDRESS> to any port 3000 proto tcp
sudo ufw reload

#firewalld
sudo firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="<IP_ADDRESS>" port protocol="tcp" port="3000" accept'
sudo firewall-cmd --reload

#################################### Alert ##########################

Step 1: Import or Create a Dashboard

    Open Grafana and log in.
    Create a new dashboard or import an existing Windows Exporter dashboard. Many pre-built dashboards are available on Grafana's dashboards website.
    Add a new panel or locate the panel where you want to set the alert.

Step 2: Add a Query

    Edit the panel and navigate to the Query section.
    Use PromQL to fetch metrics from Prometheus. For example:
        CPU Usage: 100 - (avg by(instance) (rate(windows_cpu_time_total{mode="idle"}[5m])) * 100)
        Memory Usage: (windows_memory_committed_bytes / windows_memory_commit_limit) * 100
        Disk Usage: 100 - (windows_logical_disk_free_bytes / windows_logical_disk_size_bytes * 100)

Ensure the query accurately represents the metric you want to monitor.
Step 3: Set Up Alerts

    Switch to the Alert tab within the panel.
    Click Create Alert Rule or Create Alert.
    Define the alert conditions:
        Set Conditions based on your metric query.
        Example: Trigger an alert when CPU usage is above 90% for 5 minutes.
    Define the Evaluation Interval (e.g., every 1 minute).

Step 4: Configure Alert Notifications

    Set up a Notification Channel:
        Go to Alerting > Notification Channels.
        Create or use an existing channel (e.g., email, Slack, or webhook).
    Link the notification channel to your alert rule.

Step 5: Save and Test

    Save the panel.
    Test the alert by simulating a condition where the metric exceeds the threshold.
    Verify that notifications are sent to the configured channel.

Example Scenario
To Monitor CPU Usage:

    Query: 100 - (avg by(instance) (rate(windows_cpu_time_total{mode="idle"}[5m])) * 100)
    Condition: Trigger when the value is above 90 for the last 5 minutes.
    Notification: Send an alert via email or Slack.

With this setup, you'll receive alerts when specific thresholds for your Windows Exporter metrics are breached.
